{
  "version": 3,
  "sources": ["../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/utils/util.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/utils/device.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/slidecontent.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/utils/constants.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/slidenumber.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/jumptoslide.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/utils/color.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/backgrounds.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/autoanimate.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/scrollview.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/printview.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/fragments.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/overview.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/keyboard.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/location.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/controls.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/progress.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/pointer.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/utils/loader.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/plugins.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/touch.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/focus.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/controllers/notes.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/components/playback.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/config.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/reveal.js", "../../.pnpm/reveal.js@5.0.4/node_modules/reveal.js/js/index.js"],
  "sourcesContent": ["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}", "const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );", "/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n", "import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';", "import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear mumber\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}", "/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}", "import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n", "import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n", "import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// Copy the presentation-wide background to each page\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tconst scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}", "import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}", "import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}", "/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}", "import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}", "/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n", "/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}", "import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n", "import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}", "import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}", "/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}", "/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}", "import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.0.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n", "import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],
  "mappings": "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",
  "names": ["extend", "a", "b", "i", "queryAll", "el", "selector", "Array", "from", "querySelectorAll", "toggleClass", "className", "value", "classList", "add", "remove", "deserialize", "match", "parseFloat", "transformElement", "element", "transform", "style", "matches", "target", "matchesMethod", "matchesSelector", "msMatchesSelector", "call", "closest", "parentNode", "createStyleSheet", "tag", "document", "createElement", "type", "length", "styleSheet", "cssText", "appendChild", "createTextNode", "head", "getQueryHash", "query", "location", "search", "replace", "split", "shift", "pop", "unescape", "fileExtensionToMimeMap", "mp4", "m4a", "ogv", "mpeg", "webm", "UA", "navigator", "userAgent", "isMobile", "test", "platform", "maxTouchPoints", "isAndroid", "e", "t", "slice", "o", "l", "u", "cancelAnimationFrame", "requestAnimationFrame", "s", "filter", "dirty", "active", "c", "forEach", "styleComputed", "m", "y", "v", "p", "d", "f", "S", "availableWidth", "clientWidth", "currentWidth", "scrollWidth", "previousFontSize", "currentFontSize", "Math", "min", "max", "minSize", "maxSize", "whiteSpace", "multiLine", "n", "getComputedStyle", "getPropertyValue", "display", "preStyleTestCompleted", "fontSize", "dispatchEvent", "CustomEvent", "detail", "oldValue", "newValue", "scaleFactor", "h", "w", "observeMutations", "observer", "disconnect", "originalStyle", "z", "F", "MutationObserver", "observe", "g", "subtree", "childList", "characterData", "W", "E", "clearTimeout", "setTimeout", "x", "observeWindowDelay", "M", "Object", "defineProperty", "set", "concat", "observeWindow", "fitAll", "C", "assign", "map", "newbie", "push", "fit", "unfreeze", "freeze", "unsubscribe", "arguments", "window", "SlideContent", "constructor", "Reveal", "this", "startEmbeddedIframe", "bind", "shouldPreload", "isScrollView", "preload", "getConfig", "preloadIframes", "hasAttribute", "load", "slide", "options", "tagName", "setAttribute", "getAttribute", "removeAttribute", "media", "sources", "source", "background", "slideBackgroundElement", "backgroundContent", "slideBackgroundContentElement", "backgroundIframe", "backgroundImage", "backgroundVideo", "backgroundVideoLoop", "backgroundVideoMuted", "trim", "encodeRFC3986URI", "url", "encodeURI", "charCodeAt", "toString", "toUpperCase", "decodeURI", "join", "isSpeakerNotes", "video", "muted", "sourceElement", "getMimeTypeFromFile", "filename", "excludeIframes", "iframe", "width", "height", "maxHeight", "maxWidth", "backgroundIframeElement", "querySelector", "layout", "scopeElement", "fitty", "unload", "getSlideBackground", "formatEmbeddedContent", "_appendParamToIframeSource", "sourceAttribute", "sourceURL", "param", "getSlidesElement", "src", "indexOf", "startEmbeddedContent", "autoplay", "autoPlayMedia", "play", "readyState", "startEmbeddedMedia", "promise", "catch", "controls", "addEventListener", "removeEventListener", "event", "isAttachedToDOM", "isVisible", "currentTime", "contentWindow", "postMessage", "stopEmbeddedContent", "unloadIframes", "pause", "SLIDES_SELECTOR", "HORIZONTAL_SLIDES_SELECTOR", "VERTICAL_SLIDES_SELECTOR", "POST_MESSAGE_METHOD_BLACKLIST", "FRAGMENT_STYLE_REGEX", "SlideNumber", "render", "getRevealElement", "configure", "config", "oldConfig", "slideNumberDisplay", "slideNumber", "isPrintView", "showSlideNumber", "update", "innerHTML", "getSlideNumber", "getCurrentSlide", "format", "getHorizontalSlides", "horizontalOffset", "dataset", "visibility", "getSlidePastCount", "getTotalSlides", "indices", "getIndices", "sep", "isVerticalSlide", "getHash", "formatNumber", "delimiter", "isNaN", "destroy", "JumpToSlide", "onInput", "onBlur", "onKeyDown", "jumpInput", "placeholder", "show", "indicesOnShow", "focus", "hide", "jumpTimeout", "jump", "slideNumberFormat", "getSlides", "parseInt", "getIndicesFromHash", "oneBasedIndex", "jumpAfter", "delay", "regex", "RegExp", "find", "innerText", "cancel", "confirm", "keyCode", "stopImmediatePropagation", "colorToRgb", "color", "hex3", "r", "charAt", "hex6", "rgb", "rgba", "Backgrounds", "create", "slideh", "backgroundStack", "createBackground", "slidev", "parallaxBackgroundImage", "backgroundSize", "parallaxBackgroundSize", "backgroundRepeat", "parallaxBackgroundRepeat", "backgroundPosition", "parallaxBackgroundPosition", "container", "contentElement", "sync", "data", "backgroundColor", "backgroundGradient", "backgroundTransition", "backgroundOpacity", "dataPreload", "opacity", "contrastClass", "getContrastClass", "contrastColor", "computedBackgroundStyle", "bubbleSlideContrastClassToElement", "classToBubble", "contains", "includeAll", "currentSlide", "currentBackground", "horizontalPast", "rtl", "horizontalFuture", "childNodes", "backgroundh", "backgroundv", "indexv", "previousBackground", "slideContent", "currentBackgroundContent", "backgroundImageURL", "previousBackgroundHash", "currentBackgroundHash", "updateParallax", "backgroundWidth", "backgroundHeight", "horizontalSlides", "verticalSlides", "getVerticalSlides", "horizontalOffsetMultiplier", "slideWidth", "offsetWidth", "horizontalSlideCount", "parallaxBackgroundHorizontal", "verticalOffsetMultiplier", "verticalOffset", "slideHeight", "offsetHeight", "verticalSlideCount", "parallaxBackgroundVertical", "autoAnimateCounter", "AutoAnimate", "run", "fromSlide", "toSlide", "reset", "allSlides", "toSlideIndex", "fromSlideIndex", "autoAnimateStyleSheet", "animationOptions", "getAutoAnimateOptions", "autoAnimate", "slideDirection", "fromSlideIsHidden", "css", "getAutoAnimatableElements", "elements", "autoAnimateElements", "to", "autoAnimateUnmatched", "defaultUnmatchedDuration", "duration", "defaultUnmatchedDelay", "getUnmatchedAutoAnimateElements", "unmatchedElement", "unmatchedOptions", "id", "autoAnimateTarget", "fontWeight", "sheet", "removeChild", "elementOptions", "easing", "fromProps", "getAutoAnimatableProperties", "toProps", "styles", "translate", "scale", "presentationScale", "getScale", "delta", "scaleX", "scaleY", "round", "propertyName", "toValue", "fromValue", "explicitValue", "toStyleProperties", "keys", "inheritedOptions", "autoAnimateEasing", "autoAnimateDuration", "autoAnimatedParent", "autoAnimateDelay", "direction", "properties", "bounds", "measure", "center", "getBoundingClientRect", "offsetLeft", "offsetTop", "computedStyles", "autoAnimateStyles", "property", "pairs", "autoAnimateMatcher", "getAutoAnimatePairs", "reserved", "pair", "index", "textNodes", "findAutoAnimateMatches", "node", "nodeName", "textContent", "getLocalBoundingBox", "fromScope", "toScope", "serializer", "fromMatches", "toMatches", "key", "fromElement", "primaryIndex", "secondaryIndex", "rootElement", "children", "reduce", "result", "containsAnimatedElements", "ScrollView", "activatedCallbacks", "onScroll", "activate", "stateBeforeActivation", "getState", "slideHTMLBeforeActivation", "presentationBackground", "viewportElement", "viewportStyles", "pageElements", "pageContainer", "previousSlide", "createPageElement", "contentContainer", "shouldAutoAnimateBetween", "page", "stickyContainer", "insertBefore", "horizontalSlide", "isVerticalStack", "verticalSlide", "createProgressBar", "stack", "setState", "callback", "restoreScrollPosition", "passive", "deactivate", "stateBeforeDeactivation", "removeProgressBar", "toggle", "override", "isActive", "progressBar", "progressBarInner", "progressBarPlayhead", "firstChild", "handleDocumentMouseMove", "progress", "clientY", "top", "progressBarHeight", "scrollTop", "scrollHeight", "handleDocumentMouseUp", "draggingProgressBar", "showProgressBar", "preventDefault", "syncPages", "syncScrollPosition", "slideSize", "getComputedSlideSize", "innerWidth", "innerHeight", "useCompactLayout", "scrollLayout", "viewportHeight", "compactHeight", "pageHeight", "scrollTriggerHeight", "setProperty", "scrollSnapType", "scrollSnap", "slideTriggers", "pages", "pageElement", "createPage", "slideElement", "stickyElement", "backgroundElement", "autoAnimatePages", "activatePage", "deactivatePage", "createFragmentTriggersForPage", "createAutoAnimateTriggersForPage", "totalScrollTriggerCount", "scrollTriggers", "total", "triggerStick", "scrollSnapAlign", "marginTop", "removeProperty", "scrollPadding", "totalHeight", "position", "setTriggerRanges", "scrollProgress", "syncProgressBar", "trigger", "rangeStart", "range", "scrollTriggerSegmentSize", "scrollTrigger", "fragmentGroups", "fragments", "sort", "autoAnimateElement", "autoAnimatePage", "indexh", "viewportHeightFactor", "playheadHeight", "progressBarScrollableHeight", "progressSegmentHeight", "spacing", "slideTrigger", "progressBarSlide", "scrollTriggerElements", "triggerElement", "scrollProgressMid", "activePage", "loaded", "activateTrigger", "deactivateTrigger", "setProgressBarValue", "getAllPages", "hideProgressBarTimeout", "scrollToSlide", "getScrollTriggerBySlide", "storeScrollPosition", "storeScrollPositionTimeout", "sessionStorage", "setItem", "origin", "pathname", "scrollPosition", "getItem", "scrollOrigin", "setCurrentScrollPage", "backgrounds", "sibling", "getSlideByIndices", "flatMap", "getViewportElement", "PrintView", "slides", "injectPageNumbers", "pageWidth", "floor", "margin", "Promise", "documentElement", "body", "layoutSlideContents", "slideScrollHeights", "left", "contentHeight", "numberOfPages", "ceil", "pdfMaxPagesPerSlide", "pdfPageHeightOffset", "showNotes", "notes", "getSlideNotes", "notesSpacing", "notesLayout", "notesElement", "bottom", "numberElement", "pdfSeparateFragments", "previousFragmentStep", "fragment", "clonedPage", "cloneNode", "fragmentNumber", "view", "Fragments", "disable", "enable", "availableRoutes", "hiddenFragments", "prev", "next", "grouped", "ordered", "unordered", "sorted", "group", "sortAll", "changedFragments", "shown", "hidden", "maxIndex", "currentFragment", "wasVisible", "announceStatus", "getStatusText", "bubbles", "goto", "offset", "lastVisibleFragment", "fragmentInURL", "writeURL", "Overview", "onSlideClicked", "overview", "cancelAutoSlide", "getBackgroundsElement", "overviewSlideWidth", "overviewSlideHeight", "updateSlidesVisibility", "hslide", "vslide", "hbackground", "vbackground", "vmin", "transformSlides", "cueAutoSlide", "Keyboard", "shortcuts", "bindings", "onDocumentKeyDown", "navigationMode", "unbind", "addKeyBinding", "binding", "description", "removeKeyBinding", "triggerKey", "registerKeyboardShortcut", "getShortcuts", "getBindings", "keyboardCondition", "isFocused", "autoSlideWasPaused", "isAutoSliding", "onUserInput", "activeElementIsCE", "activeElement", "isContentEditable", "activeElementIsInput", "activeElementIsNotes", "unusedModifier", "shiftKey", "altKey", "ctrlKey", "metaKey", "resumeKeyCodes", "keyboard", "isPaused", "useLinearMode", "hasHorizontalSlides", "hasVerticalSlides", "triggered", "apply", "action", "skipFragments", "right", "up", "Number", "MAX_VALUE", "down", "includes", "togglePause", "requestMethod", "requestFullscreen", "webkitRequestFullscreen", "webkitRequestFullScreen", "mozRequestFullScreen", "msRequestFullscreen", "embedded", "autoSlideStoppable", "toggleAutoSlide", "jumpToSlide", "toggleJumpToSlide", "toggleHelp", "closeOverlay", "Location", "MAX_REPLACE_STATE_FREQUENCY", "writeURLTimeout", "replaceStateTimestamp", "onWindowHashChange", "hash", "name", "bits", "hashIndexBase", "hashOneBasedIndex", "getElementById", "decodeURIComponent", "error", "readURL", "currentIndices", "newIndices", "history", "debouncedReplaceState", "replaceState", "Date", "now", "replaceStateTimeout", "encodeURIComponent", "Controls", "onNavigateLeftClicked", "onNavigateRightClicked", "onNavigateUpClicked", "onNavigateDownClicked", "onNavigatePrevClicked", "onNavigateNextClicked", "revealElement", "controlsLeft", "controlsRight", "controlsUp", "controlsDown", "controlsPrev", "controlsNext", "controlsRightArrow", "controlsLeftArrow", "controlsDownArrow", "controlsLayout", "controlsBackArrows", "pointerEvents", "eventName", "routes", "fragmentsRoutes", "controlsTutorial", "hasNavigatedVertically", "hasNavigatedHorizontally", "Progress", "onProgressClicked", "bar", "getProgress", "getMaxWidth", "slidesTotal", "slideIndex", "clientX", "targetIndices", "Pointer", "lastMouseWheelStep", "cursorHidden", "cursorInactiveTimeout", "onDocumentCursorActive", "onDocumentMouseScroll", "mouseWheel", "hideInactiveCursor", "showCursor", "cursor", "hideCursor", "hideCursorTime", "wheelDelta", "loadScript", "script", "async", "defer", "onload", "onreadystatechange", "onerror", "err", "Error", "lastChild", "Plugins", "reveal", "state", "registeredPlugins", "asyncDependencies", "plugins", "dependencies", "registerPlugin", "resolve", "scripts", "scriptsToLoad", "condition", "scriptLoadedCallback", "initPlugins", "then", "console", "warn", "pluginValues", "values", "pluginsToInitialize", "loadAsync", "initNextPlugin", "afterPlugInitialized", "plugin", "init", "hasPlugin", "getPlugin", "getRegisteredPlugins", "Touch", "touchStartX", "touchStartY", "touchStartCount", "touchCaptured", "onPointerDown", "onPointerMove", "onPointerUp", "onTouchStart", "onTouchMove", "onTouchEnd", "msPointerEnabled", "isSwipePrevented", "touches", "currentX", "currentY", "includeFragments", "deltaX", "deltaY", "abs", "pointerType", "MSPOINTER_TYPE_TOUCH", "STATE_FOCUS", "STATE_BLUR", "Focus", "onRevealPointerDown", "onDocumentPointerDown", "blur", "Notes", "updateVisibility", "hasNotes", "isSpeakerNotesWindow", "notesElements", "Playback", "progressCheck", "diameter", "diameter2", "thickness", "playing", "progressOffset", "canvas", "context", "getContext", "setPlaying", "wasPlaying", "animate", "progressBefore", "radius", "iconSize", "endAngle", "PI", "startAngle", "save", "clearRect", "beginPath", "arc", "fillStyle", "fill", "lineWidth", "strokeStyle", "stroke", "fillRect", "moveTo", "lineTo", "restore", "on", "listener", "off", "defaultConfig", "minScale", "maxScale", "respondToHashChanges", "disableLayout", "touch", "loop", "shuffle", "help", "showHiddenSlides", "autoSlide", "autoSlideMethod", "defaultTiming", "previewLinks", "postMessageEvents", "focusBodyOnPageVisibilityChange", "transition", "transitionSpeed", "scrollActivationWidth", "POSITIVE_INFINITY", "viewDistance", "mobileViewDistance", "sortFragmentsOnSync", "VERSION", "Deck", "autoSlidePlayer", "ready", "navigationHistory", "slidesTransform", "dom", "autoSlideTimeout", "autoSlideStartTime", "autoSlidePaused", "scrollView", "printView", "pointer", "start", "Util", "wrapper", "parent", "childElementCount", "Device", "pauseOverlay", "createSingletonNode", "tagname", "classname", "nodes", "testNode", "statusElement", "overflow", "clip", "createStatusElement", "setupDOM", "onPostMessage", "setInterval", "scrollLeft", "onFullscreenChange", "activatePrintView", "activateScrollView", "removeEventListeners", "viewport", "activateInitialView", "text", "nodeType", "isAriaHidden", "isDisplayHidden", "child", "isReady", "numberOfSlides", "resume", "enablePreviewLinks", "disablePreviewLinks", "onAutoSlidePlayerClick", "addEventListeners", "onWindowResize", "onSlidesClicked", "onTransitionEnd", "onPageVisibilityChange", "useCapture", "transforms", "createEvent", "initEvent", "dispatchPostMessage", "dispatchSlideChanged", "self", "message", "namespace", "JSON", "stringify", "onPreviewLinkClicked", "showPreview", "overlay", "showHelp", "html", "viewportWidth", "size", "oldScale", "presentationWidth", "presentationHeight", "zoom", "len", "checkResponsiveScrollView", "remainingHeight", "getRemainingHeight", "newHeight", "oldHeight", "nw", "naturalWidth", "videoWidth", "nh", "naturalHeight", "videoHeight", "es", "setPreviousVerticalIndex", "getPreviousVerticalIndex", "attributeName", "isLastVerticalSlide", "nextElementSibling", "isFirstSlide", "isLastSlide", "wasPaused", "defaultPrevented", "stateBefore", "indexhBefore", "indexvBefore", "updateSlides", "slideChanged", "currentHorizontalSlide", "currentVerticalSlides", "autoAnimateTransition", "stateLoop", "j", "splice", "beforeSlide", "random", "slidesLength", "printMode", "loopedForwards", "loopedBackwards", "reverse", "showFragmentsIn", "hideFragmentsIn", "wasPresent", "slideState", "distanceX", "distanceY", "horizontalSlidesLength", "verticalSlidesLength", "oy", "fragmentRoutes", "pastCount", "mainLoop", "isVertical", "getSlide", "indexf", "paused", "fragmentAutoSlide", "parentAutoSlide", "slideAutoSlide", "playbackRate", "navigateNext", "pauseAutoSlide", "resumeAutoSlide", "navigateLeft", "undefined", "navigateRight", "navigateUp", "navigateDown", "navigatePrev", "parse", "method", "args", "anchor", "fullscreenElement", "webkitFullscreenElement", "currentTarget", "API", "initialize", "initOptions", "setViewport", "syncSlide", "syncFragments", "navigateFragment", "prevFragment", "nextFragment", "availableFragments", "toggleOverview", "toggleScrollView", "isOverview", "loadSlide", "unloadSlide", "hidePreview", "pausedFlag", "overviewFlag", "totalCount", "allFragments", "fragmentWeight", "getSlidesAttributes", "attributes", "attribute", "getPreviousSlide", "getSlidePath", "getPlugins", "scroll", "enqueuedAPICalls", "deck"]
}
